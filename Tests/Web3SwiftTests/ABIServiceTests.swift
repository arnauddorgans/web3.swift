// 
// 

import XCTest
@testable import Web3Swift

final class ABIServiceTests: XCTestCase {
  private var abi: ABIService!
  
  override func setUpWithError() throws {
    // Put setup code here. This method is called before the invocation of each test method in the class.
    abi = ABIServiceImpl(rawService: ABIRawServiceImpl())
  }
  
  override func tearDownWithError() throws {
    // Put teardown code here. This method is called after the invocation of each test method in the class.
  }
  
  func testEncodeParameter() throws {
    try XCTAssertEqual(
      abi.encodeParameter(.uint(2345675643)),
      "0x000000000000000000000000000000000000000000000000000000008bd02b7b"
    )
    
    try XCTAssertEqual(
      abi.encodeParameter(.sizedBytes(32, "0xdf3234")),
      "0xdf32340000000000000000000000000000000000000000000000000000000000"
    )
    
    try XCTAssertEqual(
      abi.encodeParameter(
        .bytes("0xdf3234")),
      "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000"
    )
    
    try XCTAssertEqual(
      abi.encodeParameter(.array(.sizedBytes(32), [.sizedBytes(32, "0xdf3234"), .sizedBytes(32, "0xfdfd")])),
      "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000"
    )
  }
  
  func testEncodeParameters() throws {
    try XCTAssertEqual(
      abi.encodeParameters([.uint(2345675643), .string("Hello!%")]),
      "0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000"
    )
  }
  
  func testEncodeFunctionCall() throws {
    try XCTAssertEqual(
      abi.encodeFunctionCall(name: "myMethod", parameters: [.uint(2345675643), .string("Hello!%")]),
      "0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000"
    )
  }
  
  func testDecodeParameter() throws {
    try XCTAssertEqual(abi.decodeParameter("0x0000000000000000000000000000000000000000000000000000000000000010", as: .uint), .uint(16))
    
    try XCTAssertEqual(abi.decodeParameter("0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000", as: .string), .string("Hello!%!"))
    
    let parentStruct: ABIValueType = .tuple([
      .uint,
      .uint,
      .tuple([
        .uint,
        .uint
      ])
    ])
    try XCTAssertEqual(abi.decodeParameter("0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e", as: parentStruct), .tuple([
      .uint(42),
      .uint(56),
      .tuple([
        .uint(45),
        .uint(78)
      ])
    ]))
  }
  
  func testDecodeParameters() throws {
    try XCTAssertEqual(abi.decodeParameters("0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000", as: [.string, .uint]), [
      .string("Hello!%!"),
      .uint(234)
    ])
  }
}
